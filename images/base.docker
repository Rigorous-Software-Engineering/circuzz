FROM debian:bookworm

# non interactive to not get prompts during installations
ENV DEBIAN_FRONTEND noninteractive

# explicitly switch to root directory
WORKDIR /

# explicitly set root user
USER root

# installation of dependencies from debian repository
RUN apt-get update && \
    apt-get -y install \
        git \
        bat \
        fd-find \
        ripgrep \
        curl \
        vim \
        python3 \
        python3-requests \
        build-essential \
        lsb-release \
        nodejs \
        npm

# create circuzz folder for any kind of circuzz related resources or files
RUN mkdir -p /circuzz

# -------------------------------------------------------------
# git settings
# -------------------------------------------------------------

# NOTE: The noir repo was having trouble during cloning, which is probably related to the
# postBuffer size or poor internet connection. These statemenets should help the download
# to succeed.
RUN git config --global http.postBuffer 4096M && \
    git config --global http.maxRequestBuffer 100M && \
    git config --global core.compression 0 && \
    git config --global http.lowSpeedLimit 0 && \
    git config --global http.lowSpeedTime 999999

# -------------------------------------------------------------
# go installation
# -------------------------------------------------------------

ARG GO_VERSION

ADD https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz /

RUN tar -xvf go${GO_VERSION}.linux-amd64.tar.gz && \
    rm -rf go${GO_VERSION}.linux-amd64.tar.gz

ENV GOROOT="/go"
ENV PATH="${GOROOT}/bin:${PATH}"

# -------------------------------------------------------------
# rust installation
# -------------------------------------------------------------

ARG RUST_VERSION

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | \
    bash -s -- -y --profile minimal --default-toolchain=${RUST_VERSION}

ENV PATH="/root/.cargo/bin:${PATH}"