{
    "experiment" : {
        "enable_exit_on_failure" : false,
        "enable_working_dir_cleanup" : true,

        "prove_and_verify_tuning_strategy" : "time",
        "prove_and_verify_tuning_percentage" : 0.5
    },

    "noir": {
        "boundary_input_probability" : 0.1,
        "test_iterations"  : 2
    },

    "ir" : {
        "operators" : {
            "relations"                   : ["<", ">", "<=", ">=", "==", "!="],
            "boolean_unary_operators"     : ["!"],
            "boolean_binary_operators"    : ["&&", "||", "^^"],
            "arithmetic_unary_operators"  : ["-"],
            "arithmetic_binary_operators" : ["+", "-", "**", "*", "/", "^", "&", "|"],

            "is_arithmetic_ternary_supported" : true,
            "is_boolean_ternary_supported"    : false
        },

        "generation" : {
            "generator" : "arithmetic",

            "constant_probability_weight" : 1,
            "variable_probability_weight" : 1,
            "unary_probability_weight"    : 1,
            "binary_probability_weight"   : 1,
            "relation_probability_weight" : 1,
            "ternary_probability_weight"  : 1,

            "max_expression_depth"           : 4,
            "min_number_of_assertions"       : 0,
            "max_number_of_assertions"       : 2,
            "min_number_of_input_variables"  : 0,
            "max_number_of_input_variables"  : 2,
            "min_number_of_output_variables" : 0,
            "max_number_of_output_variables" : 2,

            "max_exponent_value" : 4,
            "boundary_value_probability" : 0.25
        },

        "rewrite" : {
            "weakening_probability" : 0,
            "min_rewrites" : 1,
            "max_rewrites" : 64,
            "rules" : {
                "equivalence" : [
                    { "name"    : "comm-or"
                    , "match"   : "(?a | ?b)"
                    , "rewrite" : "(?b | ?a)"
                    },
                    { "name"    : "assoc-and"
                    , "match"   : "((?a & ?b) & ?c)"
                    , "rewrite" : "(?a & (?b & ?c))"
                    },
                    { "name"    : "comm-and"
                    , "match"   : "(?a & ?b)"
                    , "rewrite" : "(?b & ?a)"
                    },
                    { "name"    : "and-zero"
                    , "match"   : "(?a & 0)"
                    , "rewrite" : "0"
                    },
                    { "name"    : "inv-xor"
                    , "match"   : "(?a ^ ?a)"
                    , "rewrite" : "0"
                    },
                    { "name"    : "comm-xor"
                    , "match"   : "(?a ^ ?b)"
                    , "rewrite" : "(?b ^ ?a)"
                    },
                    { "name"    : "zero-or-rev"
                    , "match"   : "(?a | 0)"
                    , "rewrite" : "?a"
                    },
                    { "name"    : "zero-xor-rev"
                    , "match"   : "(?a ^ 0)"
                    , "rewrite" : "?a"
                    },
                    { "name"    : "inv-xor-rev"
                    , "match"   : "0"
                    , "rewrite" : "($r:int ^ $r:int)"
                    },
                    { "name"    : "zero-or"
                    , "match"   : "?a:int"
                    , "rewrite" : "(?a | 0)"
                    },
                    { "name"    : "zero-xor"
                    , "match"   : "?a:int"
                    , "rewrite" : "(?a ^ 0)"
                    },
                    { "name"    : "idem-and"
                    , "match"   : "?a:int"
                    , "rewrite" : "(?a & ?a)"
                    },
                    { "name"    : "zero-and"
                    , "match"   : "0"
                    , "rewrite" : "($r:int & 0)"
                    },
                    { "name" : "comm-add"
                    , "match" : "(?a + ?b)"
                    , "rewrite" : "(?b + ?a)"
                    },
                    { "name" : "comm-mul"
                    , "match" : "(?a * ?b)"
                    , "rewrite" : "(?b * ?a)"
                    },
                    { "name" : "comm-div"
                    , "match" : "(?a / ?b)"
                    , "rewrite" : "((1 / ?b) * ?a)"
                    },
                    { "name" : "dist-mul-add"
                    , "match" : "((?a + ?b) * ?c)"
                    , "rewrite" : "((?a * ?c) + (?b * ?c))"
                    },
                    { "name" : "dist-add-mul"
                    , "match" : "((?a * ?c) + (?b * ?c))"
                    , "rewrite" : "((?a + ?b) * ?c)"
                    },
                    { "name" : "assoc-add"
                    , "match" : "((?a + ?b) + ?c)"
                    , "rewrite" : "(?a + (?b + ?c))"
                    },
                    { "name" : "assoc-add-rev"
                    , "match" : "(?a + (?b + ?c))"
                    , "rewrite" : "((?a + ?b) + ?c)"
                    },
                    { "name" : "assoc-mul"
                    , "match" : "((?a * ?b) * ?c)"
                    , "rewrite" : "(?a * (?b * ?c))"
                    },
                    { "name" : "assoc-mul-rev"
                    , "match" : "(?a * (?b * ?c))"
                    , "rewrite" : "((?a * ?b) * ?c)"
                    },
                    { "name" : "assoc-div"
                    , "match" : "((?a / ?b) * ?c)"
                    , "rewrite" : "(?a * (?c / ?b))"
                    },
                    { "name" : "assoc-div-rev"
                    , "match" : "(?a * (?c / ?b))"
                    , "rewrite" : "((?a / ?b) * ?c)"
                    },
                    { "name" : "zero-add-des"
                    , "match" : "(?a + 0)"
                    , "rewrite" : "?a"
                    },
                    { "name" : "one-mul-des"
                    , "match" : "(?a * 1)"
                    , "rewrite" : "?a"
                    },
                    { "name" : "one-div-des"
                    , "match" : "(?a / 1)"
                    , "rewrite" : "?a"
                    },
                    { "name" : "inv-zero-add-des"
                    , "match" : "(?a - 0)"
                    , "rewrite" : "?a"
                    },
                    { "name" : "neg-zero-add-des"
                    , "match" : "(0 - ?a)"
                    , "rewrite" : "(-?a)"
                    },
                    { "name" : "inv-add-des"
                    , "match" : "(?a - ?a)"
                    , "rewrite" : "0"
                    },
                    { "name" : "inv-assoc-neg2pos"
                    , "match" : "((?a - ?b) - ?c)"
                    , "rewrite" : "(?a - (?b + ?c))"
                    },
                    { "name" : "inv-assoc-pos2neg"
                    , "match" : "(?a - (?b + ?c))"
                    , "rewrite" : "((?a - ?b) - ?c)"
                    },
                    { "name" : "inv_addition_inl"
                    , "match" : "(?a + (-?c))"
                    , "rewrite" : "(?a - ?c)"
                    },
                    { "name" : "double-negation-add-des"
                    , "match" : "(-(-?a))"
                    , "rewrite" : "?a"
                    },
                    { "name" : "pow2_to_mul"
                    , "match" : "(?a ** 2)"
                    , "rewrite" : "(?a * ?a)"
                    },
                    { "name" : "pow3_to_mul"
                    , "match" : "(?a ** 3)"
                    , "rewrite" : "((?a * ?a) * ?a)"
                    },
                    { "name" : "mul_to_pow2"
                    , "match" : "(?a * ?a)"
                    , "rewrite" : "(?a ** 2)"
                    },
                    { "name" : "mul_to_pow3"
                    , "match" : "((?a * ?a) * ?a)"
                    , "rewrite" : "(?a ** 3)"
                    },
                    { "name" : "zero-add-con"
                    , "match" : "?a:int"
                    , "rewrite" : "(?a + 0)"
                    },
                    { "name" : "one-mul-con"
                    , "match" : "?a:int"
                    , "rewrite" : "(?a * 1)"
                    },
                    { "name" : "one-div-con"
                    , "match" : "?a:int"
                    , "rewrite" : "(?a / 1)"
                    },
                    { "name" : "inv-zero-add-con"
                    , "match" : "?a:int"
                    , "rewrite" : "(?a - 0)"
                    },
                    { "name" : "neg-zero-add-con"
                    , "match" : "(-?a)"
                    , "rewrite" : "(0 - ?a)"
                    },
                    { "name" : "inv_addition_exp"
                    , "match" : "(?a - ?c)"
                    , "rewrite" : "(?a + (-?c))"
                    },
                    { "name" : "double-negation-add-con"
                    , "match" : "?a:int"
                    , "rewrite" : "(-(-?a))"
                    },
                    { "name" : "add_sub_random_value"
                    , "match" : "?a:int"
                    , "rewrite" : "((?a - $r:int) + $r:int)"
                    },
                    { "name" : "inv-div-des"
                    , "match" : "(?a / ?a)"
                    , "rewrite" : "1"
                    },
                    { "name" : "zero-lor-des"
                    , "match" : "(?a || F)"
                    , "rewrite" : "?a"
                    },
                    { "name" : "zero-land-des"
                    , "match" : "(?a && T)"
                    , "rewrite" : "?a"
                    },
                    { "name" : "taut-lor"
                    , "match" : "(?a || T)"
                    , "rewrite" : "T"
                    },
                    { "name" : "contra-land"
                    , "match" : "(?a && F)"
                    , "rewrite" : "F"
                    },
                    { "name" : "assoc-lor"
                    , "match" : "((?a || ?b) || ?c)"
                    , "rewrite" : "(?a || (?b || ?c))"
                    },
                    { "name" : "assoc-land"
                    , "match" : "((?a && ?b) && ?c)"
                    , "rewrite" : "(?a && (?b && ?c))"
                    },
                    { "name" : "comm-lor"
                    , "match" : "(?a || ?b)"
                    , "rewrite" : "(?b || ?a)"
                    },
                    { "name" : "comm-lan"
                    , "match" : "(?a && ?b)"
                    , "rewrite" : "(?b && ?a)"
                    },
                    { "name" : "dist-lor-land"
                    , "match" : "((?a && ?b) || ?c)"
                    , "rewrite" : "((?a || ?c) && (?b || ?c))"
                    },
                    { "name" : "dist-land-lor"
                    , "match" : "((?a || ?c) && (?b || ?c))"
                    , "rewrite" : "((?a && ?b) || ?c)"
                    },
                    { "name" : "de-morgan-land-con"
                    , "match" : "(!(?a && ?b))"
                    , "rewrite" : "((!?a) || (!?b))"
                    },
                    { "name" : "de-morgan-land-des"
                    , "match" : "((!?a) || (!?b))"
                    , "rewrite" : "(!(?a && ?b))"
                    },
                    { "name" : "de-morgan-lor-con"
                    , "match" : "(!(?a || ?b))"
                    , "rewrite" : "((!?a) && (!?b))"
                    },
                    { "name" : "de-morgan-lor-des"
                    , "match" : "((!?a) && (!?b))"
                    , "rewrite" : "(!(?a || ?b))"
                    },
                    { "name" : "double-negation-des"
                    , "match" : "(!(!?a))"
                    , "rewrite" : "?a"
                    },
                    { "name" : "double-land-des"
                    , "match" : "(?a && ?a)"
                    , "rewrite" : "?a:bool"
                    },
                    { "name" : "double-lor-des"
                    , "match" : "(?a || ?a)"
                    , "rewrite" : "?a:bool"
                    },
                    { "name" : "double-lxor-des"
                    , "match" : "(?a ^^ ?a)"
                    , "rewrite" : "F"
                    },
                    { "name" : "comm-lxor"
                    , "match" : "(?a ^^ ?b)"
                    , "rewrite" : "(?b ^^ ?a)"
                    },
                    { "name" : "lxor-to-or-and"
                    , "match" : "(?a ^^ ?b)"
                    , "rewrite" : "(((!?a) && ?b) || (?a && (!?b)))"
                    },
                    { "name" : "zero-lor-con"
                    , "match" : "?a:bool"
                    , "rewrite" : "(?a || F)"
                    },
                    { "name" : "zero-land-con"
                    , "match" : "?a:bool"
                    , "rewrite" : "(?a && T)"
                    },
                    { "name" : "double-negation-con"
                    , "match" : "?a:bool"
                    , "rewrite" : "(!(!?a))"
                    },
                    { "name" : "double-land-con"
                    , "match" : "?a:bool"
                    , "rewrite" : "(?a && ?a)"
                    },
                    { "name" : "double-lor-con"
                    , "match" : "?a:bool"
                    , "rewrite" : "(?a || ?a)"
                    },
                    { "name" : "double-lxor-con"
                    , "match" : "F"
                    , "rewrite" : "($r:bool ^^ $r:bool)"
                    },
                    { "name" : "or-and-to-lxor"
                    , "match" : "(((!?a) && ?b) || (?a && (!?b)))"
                    , "rewrite" : "(?a ^^ ?b)"
                    },
                    { "name" : "commutativity-equ"
                    , "match" : "(?a == ?b)"
                    , "rewrite" : "(?b == ?a)"
                    },
                    { "name" : "relation-geq-to-leq"
                    , "match" : "(?a >= ?b)"
                    , "rewrite" : "(?b <= ?a)"
                    },
                    { "name" : "relation-leq-to-geq"
                    , "match" : "(?a <= ?b)"
                    , "rewrite" : "(?b >= ?a)"
                    },
                    { "name" : "relation-leq-to-lth-and-equ"
                    , "match" : "(?a <= ?b)"
                    , "rewrite" : "((?a < ?b) || (?a == ?b))"
                    },
                    { "name" : "relation-lth-and-equ-to-leq"
                    , "match" : "((?a < ?b) || (?a == ?b))"
                    , "rewrite" : "(?a <= ?b)"
                    },
                    { "name" : "relation-geq-to-gth-and-equ"
                    , "match" : "(?a >= ?b)"
                    , "rewrite" : "((?a > ?b) || (?a == ?b))"
                    },
                    { "name" : "relation-gth-and-equ-to-geq"
                    , "match" : "((?a > ?b) || (?a == ?b))"
                    , "rewrite" : "(?a >= ?b)"
                    },
                    { "name" : "relation-leq-to-not-gth"
                    , "match" : "(?a <= ?b)"
                    , "rewrite" : "(!(?a > ?b))"
                    },
                    { "name" : "relation-not-gth-to-leq"
                    , "match" : "(!(?a > ?b))"
                    , "rewrite" : "(?a <= ?b)"
                    },
                    { "name" : "relation-geq-to-not-lth"
                    , "match" : "(?a >= ?b)"
                    , "rewrite" : "(!(?a < ?b))"
                    },
                    { "name" : "relation-not-lth-to-geq"
                    , "match" : "(!(?a < ?b))"
                    , "rewrite" : "(?a >= ?b)"
                    },
                    { "name" : "relation-neq-to-not-equ"
                    , "match" : "(?a != ?b)"
                    , "rewrite" : "(!(?a == ?b))"
                    },
                    { "name" : "relation-not-equ-to-neq"
                    , "match" : "(!(?a == ?b))"
                    , "rewrite" : "(?a != ?b)"
                    }
                ],
                "weakening" : [
                    { "name" : "assertion-weakening-with-equ-to-geq"
                    , "match" : "{assert (?a == ?b)}"
                    , "rewrite" : "{assert (?a >= ?b)}"
                    },
                    { "name" : "assertion-weakening-with-equ-to-leq"
                    , "match" : "{assert (?a == ?b)}"
                    , "rewrite" : "{assert (?a <= ?b)}"
                    },
                    { "name" : "assertion-weakening-with-gth-to-geq"
                    , "match" : "{assert (?a > ?b)}"
                    , "rewrite" : "{assert (?a >= ?b)}"
                    },
                    { "name" : "assertion-weakening-with-lth-to-leq"
                    , "match" : "{assert (?a < ?b)}"
                    , "rewrite" : "{assert (?a <= ?b)}"
                    },
                    { "name" : "assertion-weakening-with-gth-to-neq"
                    , "match" : "{assert (?a > ?b)}"
                    , "rewrite" : "{assert (?a != ?b)}"
                    },
                    { "name" : "assertion_weakening-with-lth-to-neq"
                    , "match" : "{assert (?a < ?b)}"
                    , "rewrite" : "{assert (?a != ?b)}"
                    },
                    { "name" : "assertion-weakening-with-equ-to-xor"
                    , "match" : "{assert (?a == ?b)}"
                    , "rewrite" : "{assert ((?a ^ ?b) == 0)}"
                    },
                    { "name" : "assertion-weakening-with-and-to-lor"
                    , "match" : "{assert (?a && ?b)}"
                    , "rewrite" : "{assert (?a || ?b)}"
                    }
                ]
            }
        }
    }
}